-- Database Schema for Library Management System

-- 1. Books Table
CREATE TABLE Books (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255),
    genre VARCHAR(100),
    published_year INT,
    available_copies INT DEFAULT 1
);

-- 2. Members Table
CREATE TABLE Members (
    member_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    join_date DATE DEFAULT CURRENT_DATE
);

-- 3. Transactions Table
CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    book_id INT,
    member_id INT,
    borrow_date DATE NOT NULL,
    return_date DATE,
    status ENUM('borrowed', 'returned') DEFAULT 'borrowed',
    FOREIGN KEY (book_id) REFERENCES Books(book_id) ON DELETE CASCADE,
    FOREIGN KEY (member_id) REFERENCES Members(member_id) ON DELETE CASCADE
);

-- Sample SQL Queries

-- Insert new book
INSERT INTO Books (title, author, genre, published_year, available_copies)
VALUES ('To Kill a Mockingbird', 'Harper Lee', 'Fiction', 1960, 5);

-- Insert new member
INSERT INTO Members (first_name, last_name, email)
VALUES ('Alice', 'Smith', 'alice.smith@example.com');

-- Borrow a book (transaction)
INSERT INTO Transactions (book_id, member_id, borrow_date)
VALUES (1, 1, '2024-11-15');

-- Return a book (update transaction)
UPDATE Transactions
SET return_date = '2024-11-25', status = 'returned'
WHERE transaction_id = 1;

-- Retrieve all books in the library
SELECT * FROM Books;

-- Retrieve all members
SELECT * FROM Members;

-- Retrieve all transactions (borrow/return history)
SELECT t.transaction_id, b.title AS book_title, m.first_name, m.last_name, 
       t.borrow_date, t.return_date, t.status
FROM Transactions t
JOIN Books b ON t.book_id = b.book_id
JOIN Members m ON t.member_id = m.member_id;

-- Delete a member
DELETE FROM Members
WHERE member_id = 1;

-- Delete a book
DELETE FROM Books
WHERE book_id = 1;
